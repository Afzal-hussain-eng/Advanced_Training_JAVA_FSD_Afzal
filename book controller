package com.afzal.controller;

import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.afzal.domain.Book;
import com.afzal.service.IBookService;

@RestController
@Scope("request")
@CrossOrigin(origins = "*")
public class BookController {
	
	@Autowired
	@Qualifier("bookService")
	private IBookService bookService;
///http://localhost:8087/books
	
	@GetMapping(value = "/books", produces = {MediaType.APPLICATION_JSON_VALUE})
	public List<Book> getAllBooks(){
		return bookService.getAllBooks();
	}
	
	@GetMapping(value = "/books/{id}", produces = {MediaType.APPLICATION_JSON_VALUE})
	public Book getBookById(@PathVariable("id") int id) {
		return bookService.getBookById(id);
	}
	
	
	@GetMapping(value = "/books/publisher/{publisher}", produces = {MediaType.APPLICATION_JSON_VALUE})
	public List<Book> getBookByPublisher(@PathVariable("publisher") String book_publisher) {
		return bookService.getAllBooksByPublisher(book_publisher);
	}

	
	@GetMapping(value = "/books/year/{year}", produces = {MediaType.APPLICATION_JSON_VALUE})
	public List<Book> getAllBooksByYear(@PathVariable("year") int year){
		return bookService.getAllBooksByYear(year);
	}
	
	@GetMapping(value="/books/title/{title}", produces= {MediaType.APPLICATION_JSON_VALUE})
	public List<Book> getAllBooksByTitle(@PathVariable("title") String title){
		return bookService.getAllBooksByTitle(title);
	}
	
	@PostMapping(value = "/books", consumes = {MediaType.APPLICATION_JSON_VALUE}, 
								   produces = {MediaType.APPLICATION_JSON_VALUE})
	@ResponseStatus(code = HttpStatus.CREATED)
	public Book addBook(@RequestBody Book book) {
		return bookService.save(book);
	}
	
	
	//UPDATE entire record
	//@patch it is used for partial update 
	@PutMapping(value = "/books", consumes = {MediaType.APPLICATION_JSON_VALUE},
								  produces = {MediaType.APPLICATION_JSON_VALUE})
	@ResponseStatus(code = HttpStatus.OK)
	public Book updateBook(@RequestBody Book book) {
		return bookService.update(book);
	}
	
	@DeleteMapping(value = "/books/{id}")
	@ResponseStatus(code = HttpStatus.NO_CONTENT)
	public void deleteBookById(@PathVariable("id") int id) {
		bookService.delete(id);
		System.out.println("Book Details deleted sucessfully");
	}
	
	

}
